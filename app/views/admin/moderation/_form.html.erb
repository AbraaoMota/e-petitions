<%= form_for petition, url: admin_petition_moderation_path(petition), method: :patch do |f| -%>
  <%= form_row class: 'inline' do %>
    <%= f.label :moderation_approve, nil, class: 'block-label' do %>
      <%= f.radio_button :moderation, 'approve' %> Approve
    <% end %>
    <%= f.label :moderation_reject, nil, class: 'block-label' do %>
      <%= f.radio_button :moderation, 'reject' %> Reject
    <% end %>
    <%= error_messages_for_field petition, :moderation %>
  <% end %>

  <%= render 'admin/petitions/reject', f: f %>

  <%= form_row do %>
    <%= f.submit 'Email petition creator', :class => 'button', :tabindex => increment %>
  <% end %>

  <%= javascript_tag do %>
    $().ready(function() {
      var $rejection_controls = $('.petition-rejection-controls'),
          $reject_control = $('#petition_moderation_reject'),
          $both_controls = $('input[name="petition[moderation]"][type=radio]');
      <% unless f.object.errors.any? %>
      // Hide it straight away if there were no errors to display
      $rejection_controls.hide();
      <% end %>

      // Ensure that we get the onchange event when the users uses the keyboard
      // Details: http://bit.ly/iZx9nh
      $both_controls.keyup(function() {
        this.blur();
        this.focus();
      }).change(function() {
        if ($reject_control.is(':checked')) {
          $rejection_controls.show();
        } else {
          $rejection_controls.hide();
        }
      });
    });
  <% end -%>

<% end -%>
